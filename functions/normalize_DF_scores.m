function [DF_Score, g_b, g_t] = normalize_DF_scores(...
                            DF_Score,cs,indiv_id)


% NEW: NORMALIZE by odor responses before and after train:
g_b =[DF_Score{[1:length(cs) 4:3+length(cs)],1,1}];
g_t =[DF_Score{[1:length(cs) 4:3+length(cs)],2,1}];

for ph = 1:2
    for o = 1:2
    % Normalize by all odors
    DF_Score{o,ph,3}(indiv_id,:)= ...
        DF_Score{o,ph,2}(indiv_id,:)*...
        mean([nanmean(g_b(indiv_id,1:end/2)),...
        nanmean(g_t(indiv_id,1:end/2))]);
    DF_Score{o+3,ph,3}(indiv_id,:)= ...
        DF_Score{o+3,ph,2}(indiv_id,:)*...
        mean([nanmean(g_b(indiv_id,end/2+1:end)),...
        nanmean(g_t(indiv_id,end/2+1:end))]);

    % Normalize by ctrl odor:
    DF_Score{o,ph,4}(indiv_id,:)= ...
        DF_Score{o,ph,1}(indiv_id,:)*...
        mean([DF_Score{length(cs),1,1}(indiv_id),...
        DF_Score{length(cs),2,1}(indiv_id)]) /...
        DF_Score{length(cs),ph,1}(indiv_id);
    DF_Score{o+3,ph,4}(indiv_id,:)= ...
        DF_Score{o+3,ph,1}(indiv_id,:)*...
        mean([DF_Score{length(cs)*2,1,1}(indiv_id),...
        DF_Score{length(cs)*2,2,1}(indiv_id)]) /...
        DF_Score{length(cs)*2,ph,1}(indiv_id);                     

    end
end